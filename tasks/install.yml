---
- name: install apt dependencies
  become: "yes"
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - git
    - zsh

- name: clone oh-my-zsh
  tags:
    # Suppress warning: [ANSIBLE0006] git used in place of git module
    # Git module doesn't allow us to set `core.autocrlf=input`.
    - skip_ansible_lint
  become: "yes"
  become_user: '{{ username }}'
  command: >-
    git clone -c core.autocrlf=input --depth=1
     https://github.com/robbyrussell/oh-my-zsh.git .oh-my-zsh
  # core.autocrlf=input prevents
  # https://github.com/robbyrussell/oh-my-zsh/issues/4402
  args:
    chdir: '~{{ username }}'
    creates: '~{{ username }}/.oh-my-zsh'
  with_items: "{{ users | map(attribute='username') | list }}"
  loop_control:
    loop_var: username

- name: set permissions of oh-my-zsh
  become: "yes"
  file:
    path: '~{{ username }}/.oh-my-zsh'
    # Prevent the cloned repository from having insecure permissions.
    # Failing to do so causes compinit() calls to fail with
    # "command not found: compdef" errors
    # for users with insecure umasks (e.g., "002", allowing group writability).
    mode: 'go-w'
    recurse: "yes"
  with_items: "{{ users | map(attribute='username') | list }}"
  loop_control:
    loop_var: username

- name: set default shell (Default Method)
  become: "yes"
  user:
    name: '{{ username }}'
    shell: "/bin/zsh"
  with_items: "{{ users | map(attribute='username') | list }}"
  loop_control:
    loop_var: username
  when: "not zsh_custom_shell_command|bool"

- name: set default shell (Non-Default Method)
  become: "yes"
  command:
    cmd: "{{ zsh_default_shell_command }}"
  when: "zsh_custom_shell_command|bool"

- name: write .zshrc
  become: "yes"
  become_user: '{{ user.username }}'
  template:
    src: zshrc.j2
    dest: '~{{ user.username }}/.zshrc'
    backup: "yes"
    mode: 'u=rw,go=r'
  with_items: '{{ users }}'
  loop_control:
    loop_var: user
    label: '{{ user.username }}'

# https://bugzilla.redhat.com/show_bug.cgi?id=92132
- name: Ensure /etc/profile.d/* files source correctly
  become: "yes"
  lineinfile:
    path: /etc/zsh/zshrc
    state: present
    insertafter: 'EOF'
    regexp: '^. /etc/profile'
    line: . /etc/profile
  ignore_errors: "yes"
  # errors when user is not in /etc/passwd/
  # privilege escalation related?
